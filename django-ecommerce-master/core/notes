ACCOUNT_ADAPTER='core.forms.MyAccountAdapter'
AUTH_USER_MODEL = 'core.EcommerceUser'
ACCOUNT_SIGNUP_FORM_CLASS = 'core.forms.SignupForm'



class EcommerceUser(AbstractUser):
    is_retailer = models.BooleanField(default=False)
   
    created = models.DateTimeField(auto_now_add=True)
    modified = models.DateTimeField(auto_now=True)




class CustomerSignupView(ProfileSignupView):
success_url='accounts/login/'
profile_class=EcommerceUser





class SignupForm(forms.Form):
    email = forms.EmailField(required=True, )
    username = forms.CharField(max_length=80, required=True, )
    password1 = SetPasswordField()
    password2 = PasswordField()
    first_name = forms.CharField(max_length=100, required=False, )
    last_name = forms.CharField(max_length=100, required=False, )
    is_retailer = forms.BooleanField(required=False)

    class Meta:
        model = get_user_model()  # use this function for swapping user model
        fields = ('email', 'username', 'password1', 'password2', 'first_name', 'last_name', 'is_retailer')

    def signup(self, request, user):
        user.username = self.cleaned_data['username']
        user.first_name = self.cleaned_data['first_name']
        user.last_name = self.cleaned_data['last_name']
        user.is_retailer = self.cleaned_data['is_retailer']
        user.save()


class MyAccountAdapter(DefaultAccountAdapter):
    def save_user(self, request, user, form, commit=False):
        data = form.cleaned_data
        user.email = data.get('email')
        user.username = data.get('username')
        # all your custom fields
        # user.date_of_birth = data.get('date_of_birth')
        # user.gender = data.get('gender')
        if 'password1' in data:
            user.set_password(data["password1"])
        else:
            user.set_unusable_password()
        self.populate_username(request, user)
        if commit:
            user.save()
        return user


class EcommerceUserAdmin(admin.ModelAdmin):
    pass


admin.site.register(EcommerceUser,EcommerceUserAdmin)


path('log/',CustomerSignupView.as_view(),name='log')


ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION=True
ACCOUNT_EMAIL_REQUIRED=True
ACCOUNT_EMAIL_VERIFICATION="mandatory"

LOGIN_URL = 'home'
LOGOUT_URL = 'account_logout'
ACCOUNT_LOGOUT_REDIRECT_URL = 'account_login'
LOGIN_REDIRECT_URL ='retailer_dash'
ACCOUNT_EMAIL_REQUIRED = True
#ACCOUNT_AUTHENTICATION_METHOD = 'email'
#ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
##ACCOUNT_LOGOUT_ON_GET = True
#ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 3
#ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300
#ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_UNIQUE_EMAIL = True



 <div class="mt-5 pt-4">
    {% if messages %}
        {% for message in messages %}
        <div class="alert alert-{{ message.tags }} alert-dismissible fade show" role="alert">
          {{ message }}
          <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        {% endfor %}
    {% endif %}
    </div>